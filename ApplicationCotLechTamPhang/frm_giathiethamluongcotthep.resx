<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>